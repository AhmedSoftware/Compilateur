00000   LDA  11, 0 
00004   LDA  12, 1824
00008   LDA  13, 65268
00012   JUMP 10, 948
00016   LDM  14, 65268
00020   HALT  0, 0 
00022   JUMP  0, 20
// Table de la méthode: isEmptyStack
00026   LIT  I(178)
// Table de la méthode: push
00030   LIT  I(0)
00034   LIT  I(308)
00038   LIT  I(632)
// Table de la méthode: pop
00042   LIT  I(0)
00046   LIT  I(408)
00050   LIT  I(800)
// Begin of emptyStack
// Assez de place pour un nouveau frame ?
00054   LDA   0, 00024 (12)
00058   COMP 13, 0 
00060   JGE   0, 00074
65532   LIT  C'ERR:'
00064   LDM  14, 65532
65528   LIT  C'OVFL'
00068   LDM  15, 65528
00072   HALT  0, 0 
00074   STM  11, 00016 (12)
00078   STM  10, 00020 (12)
00082   LDA  11, 00000 (12)
00086   ADDA 12, 00024
00090   JUMP  0, 00114 (0)
00094   LDM   0, 00000 (11)
00098   LDA  12, 00000 (11)
00102   LDM  11, 00016 (12)
00106   LDM  10, 00020 (12)
00110   JUMP  0, 00000 (10)
// @1 #2 := new/2 -> @2
00114   SUBA 13, 00012
00118   COMP 13, 11
00120   JGE   0, 00134 (0)
00124   LDM  14, 65532
00128   LDA  15, 65528
00132   HALT  0, 0 
00134   LDA   0, 00002
00138   STM   0, 00000 (13)
00142   STM  13, 00008 (11)
// @2 x#1 := #2 -> @3
00146   LDM   0, 00008 (11)
00150   STM   0, 00004 (11)
// @3 x#1.1 := null -> @4
00154   LDA   0, 0 
00158   LDM   1, 00004 (11)
00162   STM   0, 00004 (1)
// @4 emptyStackResult#0 := x#1 -> @5
00166   LDM   0, 00004 (11)
00170   STM   0, 00000 (11)
00174   JUMP  0, 00094 (0)
// End of emptyStack
// Begin of isEmptyStack/0
// Assez de place pour un nouveau frame ?
00178   LDA   0, 00024 (12)
00182   COMP 13, 0 
00184   JGE   0, 00198
00188   LDM  14, 65532
00192   LDM  15, 65528
00196   HALT  0, 0 
00198   STM  11, 00016 (12)
00202   STM  10, 00020 (12)
00206   LDA  11, 00000 (12)
00210   ADDA 12, 00024
00214   JUMP  0, 00238 (0)
00218   LDM   0, 00000 (11)
00222   LDA  12, 00000 (11)
00226   LDM  11, 00016 (12)
00230   LDM  10, 00020 (12)
00234   JUMP  0, 00000 (10)
// @1 x#1 := this -> @2
00238   LDM   0, 00000 (11)
00242   STM   0, 00004 (11)
// @2 #2 := x#1.1 -> @3
00246   LDM   2, 00004 (11)
00250   LDM   0, 00004 (2)
00254   STM   0, 00008 (11)
// @3 #3 := null -> @4
00258   LDA   0, 0 
00262   STM   0, 00012 (11)
// @4 if #2 = #3 then -> @5 else -> @6
00266   LDM   0, 00008 (11)
00270   LDM   1, 00012 (11)
00274   COMP  0, 1 
00276   JE    0, 284
00280   JUMP  0, 296
// @5 isEmptyStackResult#0 := 1 -> @7
65508   LIT  I(1)
00284   LDM   0, 65508
00288   STM   0, 00000 (11)
00292   JUMP  0, 00218 (0)
// @6 isEmptyStackResult#0 := 0 -> @7
65504   LIT  I(0)
00296   LDM   0, 65504
00300   STM   0, 00000 (11)
00304   JUMP  0, 00218 (0)
// End of isEmptyStack/0
// Begin of push/1
// Assez de place pour un nouveau frame ?
00308   LDA   0, 00024 (12)
00312   COMP 13, 0 
00314   JGE   0, 00328
00318   LDM  14, 65532
00322   LDM  15, 65528
00326   HALT  0, 0 
00328   STM  11, 00016 (12)
00332   STM  10, 00020 (12)
00336   LDA  11, 00000 (12)
00340   ADDA 12, 00024
00344   JUMP  0, 00368 (0)
00348   LDM   0, 00000 (11)
00352   LDA  12, 00000 (11)
00356   LDM  11, 00016 (12)
00360   LDM  10, 00020 (12)
00364   JUMP  0, 00000 (10)
// @1 y#2 := this -> @2
00368   LDM   0, 00000 (11)
00372   STM   0, 00008 (11)
// @2 x#1.1 := y#2.1 -> @3
00376   LDM   2, 00008 (11)
00380   LDM   0, 00004 (2)
00384   LDM   1, 00004 (11)
00388   STM   0, 00004 (1)
// @3 y#2.1 := x#1 -> @4
00392   LDM   0, 00004 (11)
00396   LDM   1, 00008 (11)
00400   STM   0, 00004 (1)
00404   JUMP  0, 00348 (0)
// End of push/1
// Begin of pop/1
// Assez de place pour un nouveau frame ?
00408   LDA   0, 00024 (12)
00412   COMP 13, 0 
00414   JGE   0, 00428
00418   LDM  14, 65532
00422   LDM  15, 65528
00426   HALT  0, 0 
00428   STM  11, 00016 (12)
00432   STM  10, 00020 (12)
00436   LDA  11, 00000 (12)
00440   ADDA 12, 00024
00444   JUMP  0, 00468 (0)
00448   LDM   0, 00000 (11)
00452   LDA  12, 00000 (11)
00456   LDM  11, 00016 (12)
00460   LDM  10, 00020 (12)
00464   JUMP  0, 00000 (10)
// @1 y#1 := this -> @2
00468   LDM   0, 00000 (11)
00472   STM   0, 00004 (11)
// @2 z#2 := y#1.1 -> @3
00476   LDM   2, 00004 (11)
00480   LDM   0, 00004 (2)
00484   STM   0, 00008 (11)
// @3 y#1.1 := z#2.1 -> @4
00488   LDM   2, 00008 (11)
00492   LDM   0, 00004 (2)
00496   LDM   1, 00004 (11)
00500   STM   0, 00004 (1)
00504   JUMP  0, 00448 (0)
// End of pop/1
// Begin of cell2Int
// Assez de place pour un nouveau frame ?
00508   LDA   0, 00028 (12)
00512   COMP 13, 0 
00514   JGE   0, 00528
00518   LDM  14, 65532
00522   LDM  15, 65528
00526   HALT  0, 0 
00528   STM  11, 00020 (12)
00532   STM  10, 00024 (12)
00536   LDA  11, 00000 (12)
00540   ADDA 12, 00028
00544   JUMP  0, 00568 (0)
00548   LDM   0, 00000 (11)
00552   LDA  12, 00000 (11)
00556   LDM  11, 00020 (12)
00560   LDM  10, 00024 (12)
00564   JUMP  0, 00000 (10)
// @1 #3 := new/2 -> @2
00568   SUBA 13, 00012
00572   COMP 13, 11
00574   JGE   0, 00588 (0)
00578   LDM  14, 65532
00582   LDA  15, 65528
00586   HALT  0, 0 
00588   LDA   0, 00002
00592   STM   0, 00000 (13)
00596   STM  13, 00012 (11)
// @2 y#2 := #3 -> @3
00600   LDM   0, 00012 (11)
00604   STM   0, 00008 (11)
// @3 y#2.2 := x#1 -> @4
00608   LDM   0, 00004 (11)
00612   LDM   1, 00008 (11)
00616   STM   0, 00008 (1)
// @4 cell2IntResult#0 := y#2 -> @5
00620   LDM   0, 00008 (11)
00624   STM   0, 00000 (11)
00628   JUMP  0, 00548 (0)
// End of cell2Int
// Begin of push/2
// Assez de place pour un nouveau frame ?
00632   LDA   0, 00028 (12)
00636   COMP 13, 0 
00638   JGE   0, 00652
00642   LDM  14, 65532
00646   LDM  15, 65528
00650   HALT  0, 0 
00652   STM  11, 00020 (12)
00656   STM  10, 00024 (12)
00660   LDA  11, 00000 (12)
00664   ADDA 12, 00028
00668   JUMP  0, 00692 (0)
00672   LDM   0, 00000 (11)
00676   LDA  12, 00000 (11)
00680   LDM  11, 00020 (12)
00684   LDM  10, 00024 (12)
00688   JUMP  0, 00000 (10)
// @1 #2 := x#1 -> @2
00692   LDM   0, 00004 (11)
00696   STM   0, 00008 (11)
// @2 #3 := cell2Int(#2) -> 3
// Assez de place pour les paramètres ?
00700   LDA   0, 00008 (12)
00704   COMP 13, 0 
00706   JGE   0, 00720 (0)
00710   LDM  14, 65532
00714   LDM  15, 65528
00718   HALT  0, 0 
00720   LDM   0, 00008 (11)
00724   STM   0, 00004 (12)
00728   JUMP 10, 508
00732   STM   0, 00012 (11)
// @3 #2 := #3 -> @4
00736   LDM   0, 00012 (11)
00740   STM   0, 00008 (11)
// @4 #3 := super.push(#2) -> 5
// Assez de place pour les paramètres ?
00744   LDA   0, 00008 (12)
00748   COMP 13, 0 
00750   JGE   0, 00764 (0)
00754   LDM  14, 65532
00758   LDM  15, 65528
00762   HALT  0, 0 
00764   LDM   0, 00008 (11)
00768   STM   0, 00004 (12)
00772   LDM   1, 00000 (11)
00776   STM   1, 00000 (12)
00780   JUMP 10, 308
00784   STM   0, 00012 (11)
// @5 pushResult#0 := #3 -> @6
00788   LDM   0, 00012 (11)
00792   STM   0, 00000 (11)
00796   JUMP  0, 00672 (0)
// End of push/2
// Begin of pop/2
// Assez de place pour un nouveau frame ?
00800   LDA   0, 00036 (12)
00804   COMP 13, 0 
00806   JGE   0, 00820
00810   LDM  14, 65532
00814   LDM  15, 65528
00818   HALT  0, 0 
00820   STM  11, 00028 (12)
00824   STM  10, 00032 (12)
00828   LDA  11, 00000 (12)
00832   ADDA 12, 00036
00836   JUMP  0, 00860 (0)
00840   LDM   0, 00000 (11)
00844   LDA  12, 00000 (11)
00848   LDM  11, 00028 (12)
00852   LDM  10, 00032 (12)
00856   JUMP  0, 00000 (10)
// @1 y#1 := this -> @2
00860   LDM   0, 00000 (11)
00864   STM   0, 00004 (11)
// @2 z#2 := y#1.1 -> @3
00868   LDM   2, 00004 (11)
00872   LDM   0, 00004 (2)
00876   STM   0, 00008 (11)
// @3 v#3 := z#2.2 -> @4
00880   LDM   2, 00008 (11)
00884   LDM   0, 00008 (2)
00888   STM   0, 00012 (11)
// @4 #5 := super.pop() -> 5
// Assez de place pour les paramètres ?
00892   LDA   0, 00004 (12)
00896   COMP 13, 0 
00898   JGE   0, 00912 (0)
00902   LDM  14, 65532
00906   LDM  15, 65528
00910   HALT  0, 0 
00912   LDM   1, 00000 (11)
00916   STM   1, 00000 (12)
00920   JUMP 10, 408
00924   STM   0, 00020 (11)
// @5 x#4 := #5 -> @6
00928   LDM   0, 00020 (11)
00932   STM   0, 00016 (11)
// @6 popResult#0 := v#3 -> @7
00936   LDM   0, 00012 (11)
00940   STM   0, 00000 (11)
00944   JUMP  0, 00840 (0)
// End of pop/2
// Begin of main
// Assez de place pour un nouveau frame ?
00948   LDA   0, 00044 (12)
00952   COMP 13, 0 
00954   JGE   0, 00968
00958   LDM  14, 65532
00962   LDM  15, 65528
00966   HALT  0, 0 
00968   STM  11, 00036 (12)
00972   STM  10, 00040 (12)
00976   LDA  11, 00000 (12)
00980   ADDA 12, 00044
00984   JUMP  0, 01008 (0)
00988   LDM   0, 00000 (11)
00992   LDA  12, 00000 (11)
00996   LDM  11, 00036 (12)
01000   LDM  10, 00040 (12)
01004   JUMP  0, 00000 (10)
// @1 #6 := emptyStack() -> 2
// Assez de place pour les paramètres ?
01008   LDA   0, 00004 (12)
01012   COMP 13, 0 
01014   JGE   0, 01028 (0)
01018   LDM  14, 65532
01022   LDM  15, 65528
01026   HALT  0, 0 
01028   JUMP 10, 54
01032   STM   0, 00024 (11)
// @2 z#1 := #6 -> @3
01036   LDM   0, 00024 (11)
01040   STM   0, 00004 (11)
// @3 #6 := 1 -> @4
01044   LDM   0, 65508
01048   STM   0, 00024 (11)
// @4 #7 = z#1.push(#6) -> @5
// Assez de place pour les paramètres ?
01052   LDA   0, 00008 (12)
01056   COMP 13, 0 
01058   JGE   0, 01072 (0)
01062   LDM  14, 65532
01066   LDM  15, 65528
01070   HALT  0, 0 
01072   LDM   0, 00024 (11)
01076   STM   0, 00004 (12)
01080   LDM   1, 00004 (11)
01084   STM   1, 00000 (12)
01088   LDM   1, 00000 (1)
01092   LDA   2, 00002
01096   COMP  1, 2 
01098   JLE   0, 01106
01102   LDA   1, 00000 (2)
01106   MULA  1, 4 
01110   LDM   1, 00030 (1)
01114   LDA   2, 0 
01118   COMP  1, 2 
01120   JGE   0, 01134
01124   LDM  14, 65532
65396   LIT  C'IADR'
01128   LDM  15, 65396
01132   HALT  0, 0 
01134   JUMP 10, 00000 (1)
01138   STM   0, 00028 (11)
// @5 t#2 := #7 -> @6
01142   LDM   0, 00028 (11)
01146   STM   0, 00008 (11)
// @6 #6 := 25 -> @7
65392   LIT  I(25)
01150   LDM   0, 65392
01154   STM   0, 00024 (11)
// @7 #7 = z#1.push(#6) -> @8
// Assez de place pour les paramètres ?
01158   LDA   0, 00008 (12)
01162   COMP 13, 0 
01164   JGE   0, 01178 (0)
01168   LDM  14, 65532
01172   LDM  15, 65528
01176   HALT  0, 0 
01178   LDM   0, 00024 (11)
01182   STM   0, 00004 (12)
01186   LDM   1, 00004 (11)
01190   STM   1, 00000 (12)
01194   LDM   1, 00000 (1)
01198   LDA   2, 00002
01202   COMP  1, 2 
01204   JLE   0, 01212
01208   LDA   1, 00000 (2)
01212   MULA  1, 4 
01216   LDM   1, 00030 (1)
01220   LDA   2, 0 
01224   COMP  1, 2 
01226   JGE   0, 01240
01230   LDM  14, 65532
01234   LDM  15, 65396
01238   HALT  0, 0 
01240   JUMP 10, 00000 (1)
01244   STM   0, 00028 (11)
// @8 t#2 := #7 -> @9
01248   LDM   0, 00028 (11)
01252   STM   0, 00008 (11)
// @9 #6 := 0-5 -> @10
01256   LDM   0, 65504
65368   LIT  I(5)
01260   LDM   1, 65368
01264   SUB   0, 1 
01266   STM   0, 00024 (11)
// @10 #6 := #6 -> @11
01270   LDM   0, 00024 (11)
01274   STM   0, 00024 (11)
// @11 #7 = z#1.push(#6) -> @12
// Assez de place pour les paramètres ?
01278   LDA   0, 00008 (12)
01282   COMP 13, 0 
01284   JGE   0, 01298 (0)
01288   LDM  14, 65532
01292   LDM  15, 65528
01296   HALT  0, 0 
01298   LDM   0, 00024 (11)
01302   STM   0, 00004 (12)
01306   LDM   1, 00004 (11)
01310   STM   1, 00000 (12)
01314   LDM   1, 00000 (1)
01318   LDA   2, 00002
01322   COMP  1, 2 
01324   JLE   0, 01332
01328   LDA   1, 00000 (2)
01332   MULA  1, 4 
01336   LDM   1, 00030 (1)
01340   LDA   2, 0 
01344   COMP  1, 2 
01346   JGE   0, 01360
01350   LDM  14, 65532
01354   LDM  15, 65396
01358   HALT  0, 0 
01360   JUMP 10, 00000 (1)
01364   STM   0, 00028 (11)
// @12 t#2 := #7 -> @13
01368   LDM   0, 00028 (11)
01372   STM   0, 00008 (11)
// @13 #6 := 0-22 -> @14
01376   LDM   0, 65504
65344   LIT  I(22)
01380   LDM   1, 65344
01384   SUB   0, 1 
01386   STM   0, 00024 (11)
// @14 #6 := #6 -> @15
01390   LDM   0, 00024 (11)
01394   STM   0, 00024 (11)
// @15 #7 = z#1.push(#6) -> @16
// Assez de place pour les paramètres ?
01398   LDA   0, 00008 (12)
01402   COMP 13, 0 
01404   JGE   0, 01418 (0)
01408   LDM  14, 65532
01412   LDM  15, 65528
01416   HALT  0, 0 
01418   LDM   0, 00024 (11)
01422   STM   0, 00004 (12)
01426   LDM   1, 00004 (11)
01430   STM   1, 00000 (12)
01434   LDM   1, 00000 (1)
01438   LDA   2, 00002
01442   COMP  1, 2 
01444   JLE   0, 01452
01448   LDA   1, 00000 (2)
01452   MULA  1, 4 
01456   LDM   1, 00030 (1)
01460   LDA   2, 0 
01464   COMP  1, 2 
01466   JGE   0, 01480
01470   LDM  14, 65532
01474   LDM  15, 65396
01478   HALT  0, 0 
01480   JUMP 10, 00000 (1)
01484   STM   0, 00028 (11)
// @16 t#2 := #7 -> @17
01488   LDM   0, 00028 (11)
01492   STM   0, 00008 (11)
// @17 S#3 := 0 -> @18
01496   LDM   0, 65504
01500   STM   0, 00012 (11)
// @18 P#4 := 1 -> @19
01504   LDM   0, 65508
01508   STM   0, 00016 (11)
// @19 #6 = z#1.isEmptyStack() -> @20
// Assez de place pour les paramètres ?
01512   LDA   0, 00004 (12)
01516   COMP 13, 0 
01518   JGE   0, 01532 (0)
01522   LDM  14, 65532
01526   LDM  15, 65528
01530   HALT  0, 0 
01532   LDM   1, 00004 (11)
01536   STM   1, 00000 (12)
01540   LDM   1, 00000 (1)
01544   LDA   2, 00000
01548   COMP  1, 2 
01550   JLE   0, 01558
01554   LDA   1, 00000 (2)
01558   MULA  1, 4 
01562   LDM   1, 00026 (1)
01566   LDA   2, 0 
01570   COMP  1, 2 
01572   JGE   0, 01586
01576   LDM  14, 65532
01580   LDM  15, 65396
01584   HALT  0, 0 
01586   JUMP 10, 00000 (1)
01590   STM   0, 00024 (11)
// @20 #6 := #6 -> @21
01594   LDM   0, 00024 (11)
01598   STM   0, 00024 (11)
// @21 #7 := 0 -> @22
01602   LDM   0, 65504
01606   STM   0, 00028 (11)
// @22 if #6 = #7 then -> @23 else -> @31
01610   LDM   0, 00024 (11)
01614   LDM   1, 00028 (11)
01618   COMP  0, 1 
01620   JE    0, 1628
01624   JUMP  0, 1784
// @23 #6 = z#1.pop() -> @24
// Assez de place pour les paramètres ?
01628   LDA   0, 00004 (12)
01632   COMP 13, 0 
01634   JGE   0, 01648 (0)
01638   LDM  14, 65532
01642   LDM  15, 65528
01646   HALT  0, 0 
01648   LDM   1, 00004 (11)
01652   STM   1, 00000 (12)
01656   LDM   1, 00000 (1)
01660   LDA   2, 00002
01664   COMP  1, 2 
01666   JLE   0, 01674
01670   LDA   1, 00000 (2)
01674   MULA  1, 4 
01678   LDM   1, 00042 (1)
01682   LDA   2, 0 
01686   COMP  1, 2 
01688   JGE   0, 01702
01692   LDM  14, 65532
01696   LDM  15, 65396
01700   HALT  0, 0 
01702   JUMP 10, 00000 (1)
01706   STM   0, 00024 (11)
// @24 v#5 := #6 -> @25
01710   LDM   0, 00024 (11)
01714   STM   0, 00020 (11)
// @25 #6 := v#5 -> @26
01718   LDM   0, 00020 (11)
01722   STM   0, 00024 (11)
// @26 write #6 -> @27
01726   LDM  15, 00024 (11)
65280   LIT  C'OUT:'
01730   LDM  14, 65280
01734   HALT  0, 0 
// @27 #6 := S#3+v#5 -> @28
01736   LDM   0, 00012 (11)
01740   LDM   1, 00020 (11)
01744   ADD   0, 1 
01746   STM   0, 00024 (11)
// @28 S#3 := #6 -> @29
01750   LDM   0, 00024 (11)
01754   STM   0, 00012 (11)
// @29 #6 := P#4*v#5 -> @30
01758   LDM   0, 00016 (11)
01762   LDM   1, 00020 (11)
01766   MUL   0, 1 
01768   STM   0, 00024 (11)
// @30 P#4 := #6 -> @19
01772   LDM   0, 00024 (11)
01776   STM   0, 00016 (11)
01780   JUMP  0, 01512 (0)
// @31 #6 := S#3 -> @32
01784   LDM   0, 00012 (11)
01806   STM   0, 00024 (11)
// @32 write #6 -> @33
01792   LDM  15, 00024 (11)
01796   LDM  14, 65280
01800   HALT  0, 0 
// @33 #6 := P#4 -> @34
01802   LDM   0, 00016 (11)
01806   STM   0, 00024 (11)
// @34 write #6 -> @35
01810   LDM  15, 00024 (11)
01814   LDM  14, 65280
01818   HALT  0, 0 
01820   JUMP  0, 00988 (0)
// End of main
65268   LIT  C'STOP'

