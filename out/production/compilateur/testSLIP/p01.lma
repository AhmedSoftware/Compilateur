00000   LDA  11, 0 
00004   LDA  12, 436
00008   LDA  13, 65480
00012   JUMP 10, 26
00016   LDM  14, 65484
00020   HALT  0, 0 
00022   JUMP  0, 20
// Begin of main
// Assez de place pour un nouveau frame ?
00026   LDA   0, 00036 (12)
00030   COMP 13, 0 
00032   JGE   0, 00046
65532   LIT  C'ERR:'
00036   LDM  14, 65532
65528   LIT  C'OVFL'
00040   LDM  15, 65528
00044   HALT  0, 0 
00046   STM  11, 00028 (12)
00050   STM  10, 00032 (12)
00054   LDA  11, 00000 (12)
00058   ADDA 12, 00036
00062   JUMP  0, 00086 (0)
00066   LDM   0, 00000 (11)
00070   LDA  12, 00000 (11)
00074   LDM  11, 00028 (12)
00078   LDM  10, 00032 (12)
00082   JUMP  0, 00000 (10)
// @1 read x#1 -> @2
65524   LIT  C' IN:'
00086   LDM  14, 65524
00090   HALT  0, 0 
00092   STM  15, 00004 (11)
// @2 #4 := x#1 -> @3
00096   LDM   0, 00004 (11)
00100   STM   0, 00016 (11)
// @3 #5 := 0-10000 -> @4
65520   LIT  I(0)
00104   LDM   0, 65520
65516   LIT  I(10000)
00108   LDM   1, 65516
00112   SUB   0, 1 
00114   STM   0, 00020 (11)
// @4 #5 := #5 -> @5
00118   LDM   0, 00020 (11)
00122   STM   0, 00020 (11)
// @5 if #4 < #5 then -> @7 else -> @6
00126   LDM   0, 00016 (11)
00130   LDM   1, 00020 (11)
00134   COMP  0, 1 
00136   JL    0, 166
00140   JUMP  0, 148
// @6 if #5 < #4 then -> @7 else -> @30
00148   LDM   0, 00020 (11)
00152   LDM   1, 00016 (11)
00156   COMP  0, 1 
00158   JL    0, 166
00162   JUMP  0, 66
// @7 S#2 := x#1 -> @8
00166   LDM   0, 00004 (11)
00170   STM   0, 00008 (11)
// @8 Sd#3 := x#1 -> @9
00174   LDM   0, 00004 (11)
00178   STM   0, 00012 (11)
// @9 read x#1 -> @10
00182   LDM  14, 65524
00186   HALT  0, 0 
00188   STM  15, 00004 (11)
// @10 #4 := x#1 -> @11
00192   LDM   0, 00004 (11)
00196   STM   0, 00016 (11)
// @11 #5 := 0-10000 -> @12
00200   LDM   0, 65520
00204   LDM   1, 65516
00208   SUB   0, 1 
00210   STM   0, 00020 (11)
// @12 #5 := #5 -> @13
00214   LDM   0, 00020 (11)
00218   STM   0, 00020 (11)
// @13 if #4 < #5 then -> @15 else -> @14
00222   LDM   0, 00016 (11)
00226   LDM   1, 00020 (11)
00230   COMP  0, 1 
00232   JL    0, 262
00236   JUMP  0, 244
// @14 if #5 < #4 then -> @15 else -> @27
00244   LDM   0, 00020 (11)
00248   LDM   1, 00016 (11)
00252   COMP  0, 1 
00254   JL    0, 262
00258   JUMP  0, 404
// @15 #4 := Sd#3 -> @16
00262   LDM   0, 00012 (11)
00266   STM   0, 00016 (11)
// @16 #5 := 0 -> @17
00270   LDM   0, 65520
00274   STM   0, 00020 (11)
// @17 if #4 < #5 then -> @18 else -> @19
00278   LDM   0, 00016 (11)
00282   LDM   1, 00020 (11)
00286   COMP  0, 1 
00288   JL    0, 296
00292   JUMP  0, 314
// @18 if #4 = #5 then -> @19 else -> @21
00296   LDM   0, 00016 (11)
00300   LDM   1, 00020 (11)
00304   COMP  0, 1 
00306   JE    0, 314
00310   JUMP  0, 340
// @19 #4 := Sd#3+x#1 -> @20
00314   LDM   0, 00012 (11)
00318   LDM   1, 00004 (11)
00322   ADD   0, 1 
00324   STM   0, 00016 (11)
// @20 Sd#3 := #4 -> @22
00328   LDM   0, 00016 (11)
00332   STM   0, 00012 (11)
00336   JUMP  0, 00348 (0)
// @21 Sd#3 := x#1 -> @22
00340   LDM   0, 00004 (11)
00344   STM   0, 00012 (11)
// @22 #4 := Sd#3 -> @23
00348   LDM   0, 00012 (11)
00352   STM   0, 00016 (11)
// @23 #5 := S#2 -> @24
00356   LDM   0, 00008 (11)
00360   STM   0, 00020 (11)
// @24 if #5 < #4 then -> @25 else -> @26
00364   LDM   0, 00020 (11)
00368   LDM   1, 00016 (11)
00372   COMP  0, 1 
00374   JL    0, 382
00378   JUMP  0, 390
// @25 S#2 := Sd#3 -> @26
00382   LDM   0, 00012 (11)
00386   STM   0, 00008 (11)
// @26 read x#1 -> @10
00390   LDM  14, 65524
00394   HALT  0, 0 
00396   STM  15, 00004 (11)
00400   JUMP  0, 00192 (0)
// @27 #4 := S#2 -> @28
00404   LDM   0, 00008 (11)
00408   STM   0, 00016 (11)
// @28 write #4 -> @29
00412   LDM  15, 00016 (11)
65492   LIT  C'OUT:'
00416   LDM  14, 65492
00420   HALT  0, 0 
// @29 read x#1 -> @2
00422   LDM  14, 65524
00426   HALT  0, 0 
00428   STM  15, 00004 (11)
00432   JUMP  0, 00096 (0)
// End of main
65484   LIT  C'STOP'

