00000   LDA  11, 0 
00004   LDA  12, 230
00008   LDA  13, 65508
00012   JUMP 10, 26
00016   LDM  14, 65504
00020   HALT  0, 0 
00022   JUMP  0, 20
// Begin of main
// Assez de place pour un nouveau frame ?
00026   LDA   0, 00028 (12)
00030   COMP 13, 0 
00032   JGE   0, 00046
65532   LIT  C'ERR:'
00036   LDM  14, 65532
65528   LIT  C'OVFL'
00040   LDM  15, 65528
00044   HALT  0, 0 
00046   STM  11, 00020 (12)
00050   STM  10, 00024 (12)
00054   LDA  11, 00000 (12)
00058   ADDA 12, 00028
00062   JUMP  0, 00086 (0)
00066   LDM   0, 00000 (11)
00070   LDA  12, 00000 (11)
00074   LDM  11, 00020 (12)
00078   LDM  10, 00024 (12)
00082   JUMP  0, 00000 (10)
// @1 read x#1 -> @2
65524   LIT  C' IN:'
00086   LDM  14, 65524
00090   HALT  0, 0 
00092   STM  15, 00004 (11)
// @2 z#2 := 1 -> @3
65520   LIT  I(1)
00096   LDM   0, 65520
00100   STM   0, 00008 (11)
// @3 #3 := x#1 -> @4
00104   LDM   0, 00004 (11)
00108   STM   0, 00012 (11)
// @4 #4 := 0 -> @5
65516   LIT  I(0)
00112   LDM   0, 65516
00116   STM   0, 00016 (11)
// @5 if #3 < #4 then -> @7 else -> @6
00120   LDM   0, 00012 (11)
00124   LDM   1, 00016 (11)
00128   COMP  0, 1 
00130   JL    0, 160
00134   JUMP  0, 142
// @6 if #4 < #3 then -> @7 else -> @11
00142   LDM   0, 00016 (11)
00146   LDM   1, 00012 (11)
00150   COMP  0, 1 
00152   JL    0, 160
00156   JUMP  0, 208
// @7 #3 := z#2*x#1 -> @8
00160   LDM   0, 00008 (11)
00164   LDM   1, 00004 (11)
00168   MUL   0, 1 
00170   STM   0, 00012 (11)
// @8 z#2 := #3 -> @9
00174   LDM   0, 00012 (11)
00178   STM   0, 00008 (11)
// @9 #3 := x#1-1 -> @10
00182   LDM   0, 00004 (11)
00186   LDM   1, 65520
00190   SUB   0, 1 
00192   STM   0, 00012 (11)
// @10 x#1 := #3 -> @3
00196   LDM   0, 00012 (11)
00200   STM   0, 00004 (11)
00204   JUMP  0, 00104 (0)
// @11 #3 := z#2 -> @12
00208   LDM   0, 00008 (11)
00212   STM   0, 00012 (11)
// @12 write #3 -> @13
00216   LDM  15, 00012 (11)
65508   LIT  C'OUT:'
00220   LDM  14, 65508
00224   HALT  0, 0 
00226   JUMP  0, 00066 (0)
// End of main
65504   LIT  C'STOP'

